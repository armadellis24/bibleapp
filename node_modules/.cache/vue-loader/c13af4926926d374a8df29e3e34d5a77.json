{"remainingRequest":"/home/armad/bibleapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/armad/bibleapp/src/components/Chapter.vue?vue&type=style&index=0&id=989e8066&scoped=true&lang=css&","dependencies":[{"path":"/home/armad/bibleapp/src/components/Chapter.vue","mtime":1596381530928},{"path":"/home/armad/bibleapp/node_modules/css-loader/dist/cjs.js","mtime":1595630636889},{"path":"/home/armad/bibleapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1595630639826},{"path":"/home/armad/bibleapp/node_modules/postcss-loader/src/index.js","mtime":1595630638364},{"path":"/home/armad/bibleapp/node_modules/cache-loader/dist/cjs.js","mtime":1595630636591},{"path":"/home/armad/bibleapp/node_modules/vue-loader/lib/index.js","mtime":1595630639826}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZmFkZS1lbnRlci1hY3RpdmUsIC5mYWRlLWxlYXZlLWFjdGl2ZSB7CiAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDEwczsKICAgICB9CiAgICAgLmZhZGUtZW50ZXIsIC5mYWRlLWxlYXZlLXRvIC8qIC5mYWRlLWxlYXZlLWFjdGl2ZSBiZWxvdyB2ZXJzaW9uIDIuMS44ICovIHsKICAgICAgIG9wYWNpdHk6IDA7CiAgICAgfQoKCi5jZW50ZXIgewogIGRpc3BsYXk6ZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOwogIGFsaWduLWl0ZW1zOmNlbnRlcjsKICBtYXJnaW4tYm90dG9tOjEwcHg7Cn0KCi5jaGFwdGVyX2J1dHRvbnsKICBiYWNrZ3JvdW5kLWNvbG9yOmdyYXk7CiAgY29sb3I6d2hpdGU7CiAgYm9yZGVyLXN0eWxlOm5vbmU7Cn0KCmJ1dHRvbnsKICBiYWNrZ3JvdW5kLWNvbG9yOmdyYXk7Cn0KCmgzLCBwewogIHRleHQtYWxpZ246bGVmdDsgbWFyZ2luLWxlZnQ6MTVweDsgbWFyZ2luLXJpZ2h0OjEwcHg7Cn0K"},{"version":3,"sources":["Chapter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2MA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Chapter.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!--buttonVisible variable becomes true after Bible text is rendered. This\n      ensures that all the buttons won't appear before the text does-->\n  <div v-show=\"$store.state.buttonVisible\" :key=\"componentKey\">\n    <b-button\n      class=\"chapter_button\" \n      block variant=\"primary\" \n      v-on:click=\"reloadPage()\">\n      <i class=\"fa fa-angle-left\" style=\"float:left\"></i>\n        {{$store.state.bookchapter.name}}\n    </b-button>\n    \n    <br>\n    <br>\n    \n    <h3>{{currentChapter}}</h3>\n    \n\n    <!--Added (num, index) to avoid duplicate keys error-->\n    <br>   \n    <p \n      style=\"\" \n      v-for=\"(num, i) in $store.state.verseNum\" \n      :key=\"'num'+i\">\n      <sup>{{num}}</sup>\n      {{\" \"+ $store.state.verseArray[num-1]}}\n    </p>\n    \n    <br>\n    <div v-if=\"$store.state.buttonVisible\">\n      <transition name =\"fade\">\n        <b-button-toolbar \n          class=\"center\" \n          key-nav aria-label=\"Toolbar with button groups\">\n        <b-button-group \n          class=\"mx-1\" \n          style=\"padding-right:50px;\">\n          <b-button \n            style=\"margin-right:10px;\" \n            v-on:click.passive=\"previousBook(returnBooks);\">&laquo;\n          </b-button>\n        \n          <b-button \n            v-on:click.passive=\"previousChapter(chapterNumber);\">&lsaquo;\n          </b-button>\n        </b-button-group>\n        \n        <b-button-group class=\"mx-1\">\n          <b-button \n            style=\"margin-right:10px;\" \n            v-on:click.passive=\"nextChapter(chapterNumber);\">&rsaquo;\n          </b-button>\n        \n        <b-button \n          v-on:click.passive=\"nextBook(returnBooks);\">&raquo;\n        </b-button>\n      </b-button-group>\n      </b-button-toolbar>     \n    </transition>\n  </div>\n  </div>\n</template>\n\n\n<script>\n  export default {\n    name:\"Chapter\",\n          data() {\n    return {\n      componentKey: 0,\n      Menu: \"Main Menu\",\n    };\n  },\n\nmounted(){\n  this.componentKey;\n  this.$store.state.isChapter;\n  this.$store.state.isVisible;\n  this.$store.state.bookchapter.name;\n  this.$store.state.totalChapters;\n  this.$store.state.books;\n\n},\n\ncomputed:{\n\n  \n  currentChapter: function(){\n    return this.$store.state.bookchapter.name + \" \"+this.$store.state.bookchapter.cnumber\n  },\n         \n  chapterNumber: function(){\n    return this.$store.state.bookchapter.cnumber\n\t},\n\n  returnBooks: function(){\n    return this.$store.state.bookname         \n  },\n\n},\n  \n methods:{\n  \n  previousChapter(num) { \n      if(num>1){\n        num = num-1\n        this.$store.commit(\"getVerses\", num);\n        this.componentKey+=1\n        this.$store.state.buttonVisible=false\n      }\n      \n      else{\n        this.$store.commit(\"getVerses\", num);\n        this.componentKey+=1\n        this.$store.state.buttonVisible=false\n      }\n  },\n\n\n  nextChapter(num) { \n      if(num<this.$store.state.totalChapters){\n        num=num+1\n        this.$store.commit(\"getVerses\", num);\n        this.componentKey+=1\n        this.$store.state.buttonVisible=false\n      }\n      \n      else{\n        this.$store.commit(\"getVerses\", num);\n        this.componentKey+=1\n        this.$store.state.buttonVisible=false\n      }\n      \n  },\n\n  previousBook(bookname){\n    // Get the index of the current book inside the books array\n    var index = this.$store.state.books.map(function(e) {\n          return e.name;}).indexOf(bookname);\n    var newIndex = \"\";\n    \n    if(index >0){\n      newIndex = index-1 //Grab index of previous book\n    \n      // Store name of previous book\n      this.$store.state.bookname = this.$store.state.books[newIndex].name  \n      this.$store.commit(\"getVerses\", 1);\n      this.componentKey+=1\n      this.$store.state.buttonVisible=false\n    }\n    \n    else{\n\n        // If index is 0 go to last index of array \n      this.$store.state.bookname = this.$store.state.books[this.$store.state.books.length-1].name\n      this.$store.commit(\"getVerses\", 1);\n      this.componentKey+=1\n      this.$store.state.buttonVisible=false\n    }\n  },\n  \n  nextBook(bookname){\n    var index=0;\n    // Get the index of the current book inside the books array\n    index = this.$store.state.books.map(function(e) {\n          return e.name;}).indexOf(bookname);\n    var newIndex = \"\";\n    \n    if(index<this.$store.state.books.length-1)\n    {\n      newIndex = index+1 //Grab index of next book\n    \n      // Store name of next book inside bookname variable\n      this.$store.state.bookname = this.$store.state.books[newIndex].name  \n      this.$store.commit(\"getVerses\", 1);\n      this.componentKey+=1\n      this.$store.state.buttonVisible=false\n    }\n    \n    else{\n\n          // If index is last element in the array go to the beginning of the array\n       this.$store.state.bookname = this.$store.state.books[0].name\n       this.$store.commit(\"getVerses\", 1);\n       this.componentKey+=1\n       this.$store.state.buttonVisible=false\n\n    }\n  },\n\n reloadPage(){\n      this.$store.state.isChapter=false\n      this.$store.state.isVisible=true\n      this.componentKey +=1\n      this.$store.state.buttonVisible=false\n\t}\n}\n} \n\n\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.fade-enter-active, .fade-leave-active {\n       transition: opacity 10s;\n     }\n     .fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n       opacity: 0;\n     }\n\n\n.center {\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  margin-bottom:10px;\n}\n\n.chapter_button{\n  background-color:gray;\n  color:white;\n  border-style:none;\n}\n\nbutton{\n  background-color:gray;\n}\n\nh3, p{\n  text-align:left; margin-left:15px; margin-right:10px;\n}\n</style>\n"]}]}