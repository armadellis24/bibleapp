{"remainingRequest":"/home/zman/bibleapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/zman/bibleapp/src/components/Chapter.vue?vue&type=style&index=0&id=989e8066&scoped=true&lang=css&","dependencies":[{"path":"/home/zman/bibleapp/src/components/Chapter.vue","mtime":1595275190680},{"path":"/home/zman/bibleapp/node_modules/css-loader/dist/cjs.js","mtime":1595259590111},{"path":"/home/zman/bibleapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1595259590741},{"path":"/home/zman/bibleapp/node_modules/postcss-loader/src/index.js","mtime":1595259590441},{"path":"/home/zman/bibleapp/node_modules/cache-loader/dist/cjs.js","mtime":1595259590008},{"path":"/home/zman/bibleapp/node_modules/vue-loader/lib/index.js","mtime":1595259590741}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZhZGUtZW50ZXItYWN0aXZlLCAuZmFkZS1sZWF2ZS1hY3RpdmUgewogICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAxMHM7CiAgICAgfQogICAgIC5mYWRlLWVudGVyLCAuZmFkZS1sZWF2ZS10byAvKiAuZmFkZS1sZWF2ZS1hY3RpdmUgYmVsb3cgdmVyc2lvbiAyLjEuOCAqLyB7CiAgICAgICBvcGFjaXR5OiAwOwogICAgIH0KW3YtY2xvYWtdewoKCWRpc3BsYXk6IG5vbmU7Cn0K"},{"version":3,"sources":["Chapter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Chapter.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div v-show=\"$store.state.buttonVisible\" :key=\"componentKey\">\n    <b-button v-cloak block variant=\"primary\" v-on:click=\"reloadPage()\">\n{{Menu}}\n    </b-button>\n    <br>\n    <br>\n    <h3 align=\"left\">{{currentChapter}}</h3>\n    <!--Add (num, index) to avoid duplicate keys error-->\n    <p v-for=\"(chapNumber, i) in $store.state.totalChapters\" :key=\"i\" v-on:click.passive=\"getVerses(chapNumber);\">{{chapNumber}}</p>\n    <br>\n    <p v-for=\"(num, i) in $store.state.verseNum\" :key=\"'num'+i\">{{num +\" \"+ $store.state.verseArray[num-1]}}</p>\n    <br>\n    <br>\n    <br>\n    <div v-if=\"$store.state.buttonVisible\">\n    <transition name =\"fade\">\n   <b-button-toolbar v-cloak key-nav aria-label=\"Toolbar with button groups\">\n    <b-button-group class=\"mx-1\">\n      <b-button v-on:click.passive=\"previousBook(returnBooks);\">&laquo;</b-button>\n     <b-button v-on:click.passive=\"previousChapter(chapterNumber);\">&lsaquo;</b-button>\n    </b-button-group>\n    <b-button-group class=\"mx-1\">\n      <b-button v-on:click.passive=\"nextChapter(chapterNumber);\">&rsaquo;</b-button>\n      <b-button v-on:click.passive=\"nextBook(returnBooks);\">&raquo;</b-button>\n    </b-button-group>\n  </b-button-toolbar>     \n  </transition>\n    </div>\n  </div>\n</template>\n\n\n<script>\n  export default {\n    name:\"Chapter\",\n          data() {\n    return {\n      componentKey: 0,\n      Menu: \"Main Menu\",\n    };\n  },\nmounted(){\nthis.componentKey;\nthis.$store.state.isChapter;\nthis.$store.state.isVisible;\nthis.$store.state.bookchapter.name;\nthis.$store.state.totalChapters;\nthis.$store.state.books;\n\n},\n\ncomputed:{\n\n  \ncurrentChapter: function(){\n                  return this.$store.state.bookchapter.name + \" \"+this.$store.state.bookchapter.cnumber\n                },\n         \nchapterNumber: function(){\n\treturn this.$store.state.bookchapter.cnumber\n\t},\n\nreturnBooks: function(){\n  return this.$store.state.bookname         \n  },\n\n},\n  \n methods:{\n  \n  getVerses(num){\n\n\n        this.$store.commit(\"getVerses\", num);\n        this.componentKey+=1 //Component id changes so that we can reload a fresh BibleBook\n                                 // component that's been resetted to closed accordion view\n    },\n \n  previousChapter(num) { \n      if(num>1){\n      num = num-1\n      this.$store.commit(\"getVerses\", num);\n      this.componentKey+=1\n      this.$store.state.buttonVisible=false\n      }\n      else{\n      this.$store.commit(\"getVerses\", num);\n      this.componentKey+=1\n      this.$store.state.buttonVisible=false\n      }\n  },\n\n\n  nextChapter(num) { \n      if(num<this.$store.state.totalChapters){\n      num=num+1\n      this.$store.commit(\"getVerses\", num);\n      this.componentKey+=1\n      this.$store.state.buttonVisible=false\n      }\n      else{\n  \n      this.$store.commit(\"getVerses\", num);\n      this.componentKey+=1\n      this.$store.state.buttonVisible=false\n      }\n  \n      \n},\n\n  previousBook(bookname){\n    // Get the index of the current book inside the books array\n    var index = this.$store.state.books.map(function(e) {\n          return e.name;}).indexOf(bookname);\n    var newIndex = \"\";\n    if(index >0){\n    newIndex = index-1 //Grab index of previous book\n    \n      // Store name of previous book\n    this.$store.state.bookname = this.$store.state.books[newIndex].name  \n    this.$store.commit(\"getVerses\", 1);\n    this.componentKey+=1\n    this.$store.state.buttonVisible=false\n    }\n    else{\n\n        // If index is 0 go to last index of array \n      this.$store.state.bookname = this.$store.state.books[books.length-1].name\n      this.$store.commit(\"getVerses\", 1);\n      this.componentKey+=1\n      this.$store.state.buttonVisible=false\n\n\n    }\n  },\n  \n  nextBook(bookname){\n    var index=0;\n    // Get the index of the current book inside the books array\n    index = this.$store.state.books.map(function(e) {\n          return e.name;}).indexOf(bookname);\n    var newIndex = index+1 //Grab index of next book\n    \n      // Store name of previous book inside bookname variable\n    this.$store.state.bookname = this.$store.state.books[newIndex].name  \n    this.$store.commit(\"getVerses\", 1);\n    this.componentKey+=1\n    this.$store.state.buttonVisible=false\n  },\n\n reloadPage(){\n    this.$store.state.isChapter=false\n      this.$store.state.isVisible=true\n      this.componentKey +=1\n      this.$store.state.buttonVisible=false\n  //    console.log(this.componentKey)\n  }\n    }\n  } \n\n\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.fade-enter-active, .fade-leave-active {\n       transition: opacity 10s;\n     }\n     .fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {\n       opacity: 0;\n     }\n[v-cloak]{\n\n\tdisplay: none;\n}\n</style>\n"]}]}